/*! For license information please see filter-chunk0ffc363a7380d6b0b270.js.LICENSE.txt */
(this.webpackChunkCoCreate_attributes=this.webpackChunkCoCreate_attributes||[]).push([["filter-chunk"],{"../../CoCreateJS/node_modules/@cocreate/filter/src/index.js":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{"use strict";eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (__WEBPACK_DEFAULT_EXPORT__)\n/* harmony export */ });\n/* harmony import */ var _cocreate_utils__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @cocreate/utils */ \"../../CoCreateJS/node_modules/@cocreate/utils/src/index.js\");\n/* harmony import */ var _cocreate_cocreatejs__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @cocreate/cocreatejs */ \"../../CoCreateJS/node_modules/@cocreate/cocreatejs/src/index.js\");\n\n\n// import CoCreateSocket from '@cocreate/socket';\n// import CoCreateCrud from '@cocreate/crud';\n// import crudUtils from '@cocreate/crud/src/utils.crud.js'\n\n// let socket = new CoCreateSocket('ws');\n// let crud = CoCreateCrud(socket);\n\nconst CoCreateFilter = {\n\titems: [],\n\tioInstance: null,\n\tmoduleAttribues: [],\n\t\n\tmodule_items : [],\n\t\n\t/** start init processing **/\n\t__init: function() {\n\t\tthis.__initIntesection()\n\t\tthis.__initSocket()\n\t\tthis.__initEvents()\n\t},\n\t\n\t__initIntesection: function() {\n\t\tconst self = this;\n\t\tthis.ioInstance = new IntersectionObserver((entries, observer) => {\n\t\t\tentries.forEach(entry => {\n\t\t\t\tif (entry.isIntersecting) {\n\t\t\t\t\tconst attributeInfo = self.__getMainAttribue(entry.target);\n\t\t\t\t\tif (attributeInfo.id) {\n\t\t\t\t\t\tdocument.dispatchEvent(new CustomEvent('CoCreateFilter-loadMore', {\n\t\t\t\t\t\t\tdetail: {\n\t\t\t\t\t\t\t\tattrName: attributeInfo.name,\n\t\t\t\t\t\t\t\tattrId: attributeInfo.id\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}));\n\t\t\t\t\t}\n\t\t\t\t\tself.ioInstance.unobserve(entry.target)\n\t\t\t\t}\n\t\t\t})\n\t\t}, {\n\t\t\tthreshold: 1\n\t\t})\t\n\t},\n\t\n\t__runLoadMore: function(attrName, id) {\n\t\tif (!id || !attrName) return;\n\t\tlet item = this.items.find((item) => item.attrName === attrName && item.id === id)\n\t\tif (!item) return;\n\t\t\n\t\tif (item.count > 0) {\n\t\t\tthis.fetchData(item)\n\t\t}\n\t},\n\t\n\t__getMainAttribue: function(el) {\n\t\tconst attribute = this.moduleAttribues.find((attr) => (el.getAttribute(attr) || \"\") !== \"\" )\n\t\tif (attribute) {\n\t\t\treturn {\n\t\t\t\tname : attribute,\n\t\t\t\tid: el.getAttribute(attribute)\n\t\t\t}\n\t\t} else {\n\t\t\treturn {};\n\t\t}\n\t},\n\t\n\t__initSocket: function() {\n\t\tconst self = this;\n\t\t_cocreate_cocreatejs__WEBPACK_IMPORTED_MODULE_1__.crud.listenMessage('readDocumentList', function(data) {\n\t\t\tlet item_id = data['element'];\n\t\t\tlet item = self.items.find((item) => item.id === item_id);\n\t\t\tif (item) {\n\t\t\t\t// eObj.startIndex += data.result.length;\n\t\t\t\tconst result_data = data['data'];\n\t\t\t\t\n\t\t\t\t//. set the intersection observe element\n\t\t\t\tlet element = document.querySelector(`[${item.attrName}=\"${item.id}\"][data-fetch_type=\"scroll\"]`)\n\t\t\t\tif (result_data.length > 0 && element) {\n\t\t\t\t\tself.ioInstance.observe(element)\n\t\t\t\t}\n\t\t\t\t\n\t\t\t\t// /** render total count **/\n\t\t\t\tconst totalCount = data['operator'].total\n\t\t\t\tconst totalElements = document.querySelectorAll(`[${item.attrName}=\"${item.id}\"][data-fetch_type=\"total\"]`)\n\t\t\t\t\n\t\t\t\tif (totalElements) {\n\t\t\t\t\ttotalElements.forEach((el) => el.innerHTML = totalCount)\n\t\t\t\t}\n\t\t\t}\n\t\t})\n\t},\n\t\n\t__initEvents: function() {\n\t\tconst self = this;\n\t\tdocument.addEventListener('CoCreateFilter-loadMore', function(event) {\n\t\t\tconst attrId = event.detail.attrId;\n\t\t\tconst attrName = event.detail.attrName\n\t\t\tself.__runLoadMore(attrName, attrId)\n\t\t})\n\t\t\n\t\tlet buttons = document.querySelectorAll('[data-fetch_type=\"loadmore\"]');\n\t\tbuttons.forEach((btn) => {\n\t\t\tbtn.addEventListener('click', function(e) {\n\t\t\t\te.preventDefault();\n\t\t\t\tconst attributeInfo = self.__getMainAttribue(btn);\n\n\t\t\t\tif (!attributeInfo.id) return;\n\t\t\t\tself.__runLoadMore(attributeInfo.attrName, attributeInfo.attrId)\n\t\t\t})\n\t\t});\n\t},\n\t\n\t/** ---  End --- **/\n\t\n\tsetFilter: function(el, mainAttr, type) {\n\t\t\t\n\t\tif (!mainAttr) {\n\t\t\treturn;\n\t\t}\n\t\t\n\t\tlet id = el.getAttribute(mainAttr);\n\t\t\n\t\tif (!id) return;\n\t\t\n\t\tif (!this.moduleAttribues.includes(mainAttr)) this.moduleAttribues.push(mainAttr)\n\t\t\n\t\tlet collection = el.getAttribute('data-fetch_collection');\n\t\tlet fetch_type = el.getAttribute('data-fetch_value_type')\n\t\tlet fetch_collection = fetch_type == \"collection\" ? true : false;\n\t\t\n\t\tlet order_name = el.getAttribute('data-order_by')\n\t\tlet order_type = el.getAttribute('data-order_type') || 'asc';\n\n\t\tlet fetch_count = parseInt(el.getAttribute('data-fetch_count'));\n\t\t\n\t\tlet item = {\n\t\t\tel: el,\n\t\t\tid: id,\n\t\t\teId: id, // + this.items.length,\n\t\t\ttype: type,\n\t\t\t\n\t\t\tattrName: mainAttr,\n\t\t\t\n\t\t\tcollection: collection,\n\t\t\tstartIndex: 0,\n\t\t\toptions: {},\t/** return options **/\n\t\t\tfetch: {},\n\t\t\tis_collection: fetch_collection,\n\t\t\tsearch: {\n\t\t\t\ttype: 'or',\n\t\t\t\tvalue: []\n\t\t\t},\n\t\t\torders: [],\n\t\t\tfilters: []\n\t\t}\n\t\t\n\t\tif (!isNaN(fetch_count) && fetch_count > 0) {\n\t\t\titem.count = fetch_count;\n\t\t}\n\t\n\t\tif (order_name) {\n\t\t\titem.orders.push({name: order_name, type: order_type == 'asc' ? 1 : -1 })\n\t\t}\n\n\t\tthis._initFilter(item, id, mainAttr);\n\t\tthis._initOrder(item, id, mainAttr);\n\t\tthis.items.push(item);\n\t\tthis._initInputForm(item, mainAttr);\n\t\t\n\t\tthis._initExportImport(item, id, mainAttr);\n\t\treturn item;\n\t},\n\t\n\t_initFilter: function(item, id, attrName) {\n\t\tlet filter_objs = item.el.getRootNode().querySelectorAll('[' + attrName + '=\"' + id + '\"]');\n\t\tfor (var i = 0; i < filter_objs.length; i++) {\n\t\t\t\n\t\t\tlet f_el = filter_objs[i];\n\t\t\tlet filter_name = f_el.getAttribute('data-filter_name');\n\t\t\tlet filter_operator = f_el.getAttribute('data-filter_operator') ? f_el.getAttribute('data-filter_operator') : '$contain';\n\t\t\tlet value_type = f_el.getAttribute('data-filter_value_type') ? f_el.getAttribute('data-filter_value_type') : 'string';\n\t\t\tlet filter_type = f_el.getAttribute('data-filter_type');\n\t\t\tlet filter_value = f_el.getAttribute('data-filter_value');\n\t\t\tif (filter_value == null) {\n\t\t\t\tcontinue ;\n\t\t\t}\n\t\t\tif (value_type !== \"raw\") {\n\t\t\t\tfilter_value = filter_value.replace(/\\s/g, '').split(',');\n\t\t\t}\n\t\n\t\t\tif (!filter_name) {\n\t\t\t\titem.search.value = this._makeSearchOption(id, attrName);\n\t\t\t} else {\n\t\t\t\tlet idx = this.getFilterByName(item, filter_name, filter_operator);\n\t\t\t\tif (value_type != 'string') {\n\t\t\t\t\tfor (let i = 0; i < filter_value.length; i++) {\n\t\t\t\t\t\tfilter_value[i] = Number(filter_value[i]);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tthis.insertArrayObject(item.filters, idx, {name: filter_name, value: filter_value, operator: filter_operator, type: filter_type})\n\t\t\t}\n\t\t}\n\t},\n\t\n\t_initOrder: function(item, id, attrName) {\n\t\tlet filter_objs = item.el.getRootNode().querySelectorAll('[' + attrName + '=\"' + id + '\"]');\n\t\tconst _this = this;\n\t\tfor (var i = 0; i < filter_objs.length; i++) {\n\t\t\t\n\t\t\tlet f_el = filter_objs[i];\n\t\t\tlet order_name = f_el.getAttribute('data-order_by');\n\t\t\tlet order_value = f_el.getAttribute('value');\n\t\t\tif (!order_name || !order_value) {\n\t\t\t\tcontinue ;\n\t\t\t}\n\t\t\t\n\t\t\tif (['A', 'BUTTON'].includes(f_el.tagName)) {\n\t\t\t\tf_el.addEventListener('click', function(){\n\t\t\t\t\tlet name = this.getAttribute('data-order_by');\n\t\t\t\t\tlet value = this.getAttribute('value');\n\t\t\t\t\t_this._applyOrder(item, name, value)\n\t\t\t\t\tif (item.el) {\n\t\t\t\t\t\titem.el.dispatchEvent(new CustomEvent(\"changeFilterInput\", { detail: {type: 'order'} }))\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t\t\t//. apply click event\n\t\t\t} else {\n\t\t\t\tthis._applyOrder(item, order_name, order_value);\n\t\t\t}\n\t\t}\n\t\t\n\t\tthis._initToggleOrderEvent(item, id, attrName);\n\t},\n\t\n\t_initToggleOrderEvent: function(item, id, attrName) {\n\t\tlet elements = document.querySelectorAll(`[${attrName}=\"${id}\"][data-toggle_order]`)\n\t\tconst self =this;\n\t\telements.forEach((element) => {\n\t\t\telement.addEventListener('click', function() {\n\t\t\t\tlet value = this.getAttribute('data-toggle_order') || '';\n\t\t\t\tlet order_name = this.getAttribute('data-order_by');\n\t\t\t\t\n\t\t\t\tvalue = value === 'asc' ? 'desc' : 'asc';\n\n\t\t\t\tfor (let i = 0; i < elements.length; i++) {\n\t\t\t\t\tif (elements[i] !== element) {\n\t\t\t\t\t\telements[i].setAttribute('data-toggle_order', '');\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\t\n\t\t\t\titem.orders = [];\n\t\t\t\t\n\t\t\t\tself._applyOrder(item, order_name, value);\n\t\t\t\telement.setAttribute('data-toggle_order', value);\n\t\t\t\t\n\t\t\t\tif (item.el) {\n\t\t\t\t\titem.el.dispatchEvent(new CustomEvent(\"changeFilterInput\", { detail: {type: 'order'} }))\n\t\t\t\t}\n\t\t\t\t\n\t\t\t})\n\t\t})\n\t},\n\t\n\t_initExportImport: function(item, id, attrName) {\n\t\tlet export_button = document.querySelector(`[data-export_type][${attrName}=\"${id}\"]`);\n\t\tlet import_button = document.querySelector(`[data-import=\"true\"][${attrName}=\"${id}\"]`);\n\t\t\n\t\tconst self = this;\n\t\tif (export_button) {\n\t\t\t//. export_buttons action\n\t\t\texport_button.addEventListener('click', function() {\n\t\n\t\t\t\tif (!item) return;\n\t\t\t\t\n\t\t\t\tlet new_filter = self.makeFetchOptions(item)\n\t\t\t\t\n\t\t\t\tnew_filter.export = {\n\t\t\t\t\tcollection: new_filter.collection,\n\t\t\t\t\ttype: export_button.getAttribute('data-export_type') || 'json'\n\t\t\t\t}\n\t\t\t\t_cocreate_cocreatejs__WEBPACK_IMPORTED_MODULE_1__.crud.readDocumentList(new_filter);\n\t\t\t})\n\t\t\t\n\t\t}\n\t\t\n\t\tif (import_button) {\n\t\t\t//. import button action\n\t\t\timport_button.addEventListener('click', function() {\n\t\t\t\tvar input = document.createElement('input');\n\t\t\t\tinput.type = 'file';\n\t\n\t\t\t\tif (!item) return;\n\t\t\t\t\n\t\t\t\tlet collection = item.collection;\n\t\t\t\t\n\t\t\t\t//. or \n\t\t\t\t// collection = btn.getAttribute('data-collection');\n\t\n\t\t\t\tinput.onchange = e => {\n\t\t\t\t\tvar file = e.target.files[0];\n\t\t\t\t\t_cocreate_cocreatejs__WEBPACK_IMPORTED_MODULE_1__.crud.importCollection({\n\t\t\t\t\t\tcollection: collection,\n\t\t\t\t\t\tfile: file\n\t\t\t\t\t})\n\t\t\t\t}\n\t\t\t\tinput.click();\n\t\t\t})\n\t\t}\n\n\t},\n\t\n\t_applyOrder: function(item, name, value) {\n\t\t\n\t\tif (!value) {\n\t\t\treturn;\n\t\t}\n\t\tlet order_type = 0;\n\t\tlet idx = this.getOrderByName(item, name);\n\t\t\n\t\tif (value == 'asc') {\n\t\t\torder_type = 1;   \n\t\t} else if (value == 'desc') {\n\t\t\torder_type = -1;\n\t\t} else {\n\t\t\torder_type = [];\n\t\t}\n\t\tthis.insertArrayObject(item.orders, idx, {name: name, type: order_type}, order_type)\n\t},\n\t\n\tchangeCollection: function(filter) {\n\t\tlet collection = filter.el.getAttribute('data-fetch_collection');\n\t\tfilter.collection = collection;\n\t\tfilter.startIndex = 0;\n\t},\n\t\n\t_makeSearchOption: function(id, attrName) {\n\t\tlet forms = document.querySelectorAll('form[' + attrName + '=' + id + ']');\n\t\t\n\t\tlet tmpSelector = '[' + attrName + '=' + id + ']';\n\t\tlet otherInputs = document.querySelectorAll('input' + tmpSelector + ',textarea' + tmpSelector + ', select' + tmpSelector);\n\t\t\n\t\tlet template_inputs = [];\n\n\t\tfor (let i=0; i < forms.length; i++) {\n\t\t\tlet form = forms[i];\n\t\t\tlet formInputs = form.querySelectorAll('input, textarea, select');\n\t\t\tformInputs = Array.prototype.slice.call(formInputs)\n\t\t\ttemplate_inputs = template_inputs.concat(formInputs);\n\t\t}\n\t\t\n\t\totherInputs = Array.prototype.slice.call(otherInputs);\n\t\ttemplate_inputs = template_inputs.concat(otherInputs)\n\t\t\n\t\tlet values = [];\n\t\t\n\t\tfor (var i = 0; i < template_inputs.length; i++) {\n\t\t\tlet filter_name = template_inputs[i].getAttribute('data-filter_name')\n\t\t\tlet order_name = template_inputs[i].getAttribute('data-order_by')\n\t\t\t\n\t\t\tlet input = template_inputs[i];\n\t\t\tlet value_type = input.getAttribute('data-value_type') ? input.getAttribute('data-value_type') : 'string';\n\t\t\tlet value = null;\n\t\t\t\n\t\t\tif (!filter_name && !order_name) {\n\t\t\t\tif (input.type == 'checkbox' && !input.checked) {\n\t\t\t\t\tvalue = null;\n\t\t\t\t} else {\n\t\t\t\t\tvalue = input.value;\n\t\t\t\t\tif (value_type != 'string') {\n\t\t\t\t\t\tvalue = Number(value);\n\t\t\t\t\t}\n\t\t\t\t\tif (value && !values.includes(value)) {\n\t\t\t\t\t\tvalues.push(value)\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\treturn values;\n\t},\n\t\n\t_initInputForm: function(item, attrName) {\n\t\n\t\tif (!item) return;\n\t\n\t\tlet tmpSelector = '[' + attrName + '=\"' + item.id + '\"]';\n\t\tlet formInputs = item.el.getRootNode().querySelectorAll('form'+ tmpSelector + ' input, form' + tmpSelector + ' textarea, form' + tmpSelector + ' select');\n\t\tlet otherInputs = item.el.getRootNode().querySelectorAll('input' + tmpSelector + ',textarea' + tmpSelector + ', select' + tmpSelector);\n\t\n\t\tthis.setCheckboxName(item.id, attrName);\n\t\t\n\t\tformInputs = Array.prototype.slice.call(formInputs);\n\t\totherInputs = Array.prototype.slice.call(otherInputs);\n\t\tformInputs = formInputs.concat(otherInputs);\n\n\t\t// console.log('input form', tmpSelector);\n\t\t\n\t\tfor (let i=0; i < formInputs.length; i++) {\n\t\t\tlet input = formInputs[i];\n\t\t\t\n\t\t\tlet order_by = input.getAttribute('data-order_by');\n\t\t\t\n\t\t\tif (order_by) {\n\t\t\t\tthis._initOrderInput(item, input);\n\t\t\t} else {\n\t\t\t\tthis._initFilterInput(item, input, item.id);\n\t\t\t}\n\t\t}\n\t},\n\t\n\t_initOrderInput: function(item, input) {\n\t\tvar _instance = this;\n\t\tinput.addEventListener('change', function(e) {\n\t\t\t\n\t\t\te.preventDefault();\n\t\t\t\n\t\t\tlet order_by = this.getAttribute('data-order_by');\n\t\t\tlet order_type = 0;\n\t\t\tlet idx = _instance.getOrderByName(item, order_by);\n\t\t\t\n\t\t\tif (this.value == 'asc') {\n\t\t\t\torder_type = 1;   \n\t\t\t} else if (this.value == 'desc') {\n\t\t\t\torder_type = -1;\n\t\t\t} else {\n\t\t\t\torder_type = [];\n\t\t\t}\n\t\t\t\n\t\t\t_instance.insertArrayObject(item.orders, idx, {name: order_by, type: order_type}, order_type)\n\t\t\t\n\t\t\tif (item.el) {\n\t\t\t\titem.el.dispatchEvent(new CustomEvent(\"changeFilterInput\", { detail: {type: 'order'} }))\n\t\t\t}\n\t\t})\n\t},\n\n\t_initFilterInput: function (item, input, id) {\n\t\tvar _instance = this;\n\t\tvar delayTimer;\n\t\tinput.addEventListener('input', function(e) {\n\t\t\te.preventDefault();\n\t\t\tlet filter_name = this.getAttribute('data-filter_name');\n\t\t\tlet filter_operator = this.getAttribute('data-filter_operator') || '$contain';\n\t\t\tlet filter_type = this.getAttribute('data-filter_type');\n\t\t\tlet value_type = this.getAttribute('data-filter_value_type') || 'string';\n\t\t\tclearTimeout(delayTimer);\n\t\t\tdelayTimer = setTimeout(function() {\n\t\t\t\t\n\t\t\t\tif (!filter_name) {\n\t\t\t\t\titem.search.value = _instance._makeSearchOption(id, item.attrName);\n\t\t\t\t} else {\n\t\t\t\t\t\n\t\t\t\t\tlet idx = _instance.getFilterByName(item, filter_name, filter_operator);\n\t\t\t\n\t\t\t\t\tlet inputType = input.type;\n\t\t\t\t\tlet filterValue = [];\n\t\t\t\t\n\t\t\t\t\tif (inputType == 'checkbox') {\n\t\t\t\t\t\tvar inputGroup = document.querySelectorAll(\"input[name=\" + input.name + \"]:checked\");\n\t\t\t\t\t\tfor (var i = 0; i < inputGroup.length; i++) {\n\t\t\t\t\t\t\tfilterValue.push(inputGroup[i].value);\n\t\t\t\t\t\t}\n\t\t\t\n\t\t\t\t\t} else if (inputType == 'raido') {\n\t\t\t\t\t\t\n\t\t\t\t\t} else if (inputType == 'range') {\n\t\t\t\t\t\tfilterValue = [Number(input.min), Number(input.value)];\n\t\t\t\t\t} else {\n\t\t\t\t\t\tvar value = input.value;\n\t\t\t\t\t\tif (value_type != 'string') {\n\t\t\t\t\t\t\tvalue = Number(value);\n\t\t\t\t\t\t}\n\t\t\t\t\t\tif (value != \"none\") {\n\t\t\t\t\t\t\tfilterValue = [value];\n\t\t\t\t\t\t}\n\t\t\t\t\t\t\n\t\t\t\t\t\tif (value_type === \"raw\") {\n\t\t\t\t\t\t\tfilterValue = value;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\t\n\t\t\t\t\t_instance.insertArrayObject(item.filters, idx, {name: filter_name, value: filterValue, operator: filter_operator, type: filter_type})\n\t\t\t\t}\n\t\t\t\tif (item.el) {\n\t\t\t\t\titem.el.dispatchEvent(new CustomEvent(\"changeFilterInput\", { detail: {type: 'filter'} }))\n\t\t\t\t}\n\t\t\t\n\t\t\t}, 500);\n\n\t\t})\n\t},\n\tsetCheckboxName: function (id, attrName) {\n\t\tvar forms = document.querySelectorAll('form[' + attrName + '=\"' + id + '\"]')\n\t\tfor (var k = 0; k < forms.length; k++) {\n\t\t\t\n\t\t\tvar elements = forms[k].querySelectorAll('input[type=checkbox], form input[type=radio]');\n\t\t\t\n\t\t\tfor (var i = 0; i < elements.length; i++) {\n\t\t\t\tvar el_name = elements[i].getAttribute('name');\n\t\t\t\tvar f_name = elements[i].getAttribute('data-filter_name');\n\t\t\t\tif (el_name || !f_name) {\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\t\t\t\telements[i].setAttribute('name', \"_\" + id +\"-\" + f_name + \"_\" + k);\n\t\t\t}\n\t\t\t\n\t\t}\n\t},\n\t\n\tgetFilterByName: function (item, filterName, filterOperator) {\n\t\tfor (var i = 0; i < item.filters.length; i++) {\n\t\t\tvar f = item.filters[i];\n\t\t\tif (f.name == filterName && f.operator == filterOperator) {\n\t\t\t\treturn i;\n\t\t\t}\n\t\t}\n\t\treturn -1;\n\t},\n\t\n\tinsertArrayObject: function(data, idx, obj, value) {\n\t\tif (!value) {\n\t\t\tvalue = obj.value;\n\t\t}\n\t\tif (typeof value == 'object'  && value.length == 0) {\n\t\t\tif (idx != -1) {\n\t\t\t\tdata.splice(idx, 1);\n\t\t\t}\n\t\t} else {\n\t\t\tif (idx != -1) {\n\t\t\t\tdata[idx] = obj;\n\t\t\t} else {\n\t\t\t\tdata.push(obj);\n\t\t\t}\n\t\t}\n\t\t\n\t\treturn data;\n\t},\n\t\n\tgetOrderByName: function(item, name) {\n\t\tfor (var i = 0; i < item.orders.length; i++) {\n\t\t\tif (item.orders[i].name == name) {\n\t\t\t\treturn i;\n\t\t\t}\n\t\t}\n\t\treturn -1;\n\t},\n\t\n\t\n\tdefineEvent: function(item) {\n\t\titem.el.addEventListener('fetchFilterData', function(event) {\n\t\t\tconsole.log(event);\n\t\t});\n\t},\n\t\n\tfetchData:function (item) {\n\t\tlet json = this.makeFetchOptions(item);\n\t\t_cocreate_cocreatejs__WEBPACK_IMPORTED_MODULE_1__.crud.readDocumentList(json);\n\t},\n\t\n\tgetObjectByFilterId: function(obj, id) {\n\t\tfor (var i = 0; i < obj.length; i++) {\n\t\t\tlet filter = obj[i].filter;\n\t\t\tif (!filter) {\n\t\t\t\tcontinue;\n\t\t\t}\n\t\t\t\n\t\t\tif (filter.id == id) {\n\t\t\t\treturn obj[i];\n\t\t\t}\n\t\t}\n\t},\n\t\n\tgetObjectByElement: function(obj, el) {\n\t\tfor (var i = 0; i < obj.length; i++) {\n\t\t\tlet filter = obj[i].filter;\n\t\t\tif (!filter) {\n\t\t\t\tcontinue;\n\t\t\t}\n\t\t\t\n\t\t\tif (filter.el.isSameNode(el)) {\n\t\t\t\treturn obj[i];\n\t\t\t}\n\t\t}\n\t},\n\t\n\tmakeFetchOptions: function(item) {\n\t\tlet json = {\n\t\t\t\"collection\": item.collection,\n\t\t\t\"element\": item.eId,\n\t\t\t\"metadata\": {\n\t\t\t\tisRefresh: item.isRefresh\n\t\t\t},\n\t\t\t\"operator\" :  {\n\t\t\t\t\"filters\": item.filters,\n\t\t\t\t\"orders\": item.orders,\n\t\t\t\t\"search\": item.search,\n\t\t\t\t\"startIndex\": item.startIndex,\n\t\t\t},\n\t\t\t\"is_collection\": item.is_collection\n\t\t}\n\t\t\n\t\tif (item.count) {\n\t\t\tjson['operator'].count = item.count;\n\t\t}\n\t\treturn json;\n\t},\n\t\n\tinit: function({name, attribute, callback}) {\n\t\tlet elements = document.querySelectorAll(`[data-fetch_collection][${attribute}]`)\n\t\tconst self = this;\n\t\telements.forEach((el) => {\n\t\t\tself.__initFilterElement(el, attribute, name);\n\t\t});\n\t\t\n\t\t_cocreate_cocreatejs__WEBPACK_IMPORTED_MODULE_1__.socket.listen('readDocumentList', function(data) {\n\t\t\tcallback.call(null, data);\n\t\t})\n\t},\n\t\n\t__initFilterElement: function(el, attribute, name) {\n\t\tlet _id = el.getAttribute(attribute)\n\t\tconst self = this;\n\t\tif (!_id) return;\n\t\t\n\t\t//. restrict the duplication define\n\t\t// if (this.module_items.some(x => x.name == name && x.id == _id)) {\n\t\t// \treturn;\n\t\t// }\n\t\t\n\t\tlet filter = this.setFilter(el, attribute, name)\n\t\t\n\t\tif (filter) {\n\t\t\tthis.module_items.push({\n\t\t\t\tel: el,\n\t\t\t\tfilter: filter,\n\t\t\t\tid: _id,\n\t\t\t\tname: name\n\t\t\t})\n\t\t\t\n\t\t\tel.addEventListener('changeFilterInput', function(e) {\n\t\t\t\tself.fetchData(filter)\n\t\t\t})\n\t\t\t\n\t\t\tthis.fetchData(filter)\n\t\t}\n\t}\n}\n\nCoCreateFilter.__init();\n\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (CoCreateFilter);//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///../../CoCreateJS/node_modules/@cocreate/filter/src/index.js\n")}}]);