/*! For license information please see progress-chunk0ffc363a7380d6b0b270.js.LICENSE.txt */
(this.webpackChunkCoCreate_attributes=this.webpackChunkCoCreate_attributes||[]).push([["progress-chunk"],{"../../CoCreateJS/node_modules/@cocreate/progress/src/index.js":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{"use strict";eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (__WEBPACK_DEFAULT_EXPORT__)\n/* harmony export */ });\nvar CoCreateProgress = {\n\t\n\tselector: \".progress-wrapper\",\n\t\n\tmainObjects: [],\n\t\n\tinit: function() {\n\t\tthis.initElement()\n\t\tthis.initEvent()\n\t},\n\t\n\tinitElement: function(container) {\n\t\tconst main_container = container ? container : document;\n\t\t\n\t\tlet elements = main_container.querySelectorAll(this.selector);\n\t\tlet _this = this;\n\t\telements.forEach((el) => {\n\t\t\tlet filter = CoCreate.filter.setFilter(el, 'data-progress_id', 'progress')\n\t\t\t\n\t\t\tif (!filter) return;\n\t\t\t\n\t\t\tlet obj = {\n\t\t\t\tel: el,\n\t\t\t\tfilter: filter,\n\t\t\t\tid: el.getAttribute('data-progress_id')\n\t\t\t}\n\t\t\t_this.mainObjects.push(obj);\n\t\t\t_this.fetchProgess(el)\n\n\t\t})\n\t},\n\t\n\tinitEvent: function() {\n\t\tlet _this = this;\n\t\tCoCreate.socket.listen('readDocumentList', function(data) {\n\n\t\t\tif (data.metadata == \"progress-total\") {\n\t\t\t\t_this.renderProgress(data, true);\n\t\t\t} else if (data.metadata == \"progress-value\") {\n\t\t\t\t_this.renderProgress(data, false)\n\t\t\t}\n\t\t})\n\t},\n\t\n\trenderProgress(data, isTotal) {\n\t\t//.\n\t\tif (!data) return;\n\t\tconst element_id = data.element;\n\t\tif (!element_id) {\n\t\t\treturn;\n\t\t}\n\n\t\tconst result_count = data['data'].length\n\t\tlet _this = this;\t\t\n\t\tlet elements = [];\n\t\tlet selector  = isTotal ? '.progressTotal' : '.progressValue';\n\t\tselector = selector + `[data-progress_id=\"${element_id}\"]`;\n\t\t\n\t\telements = document.querySelectorAll(selector)\n\n\t\telements.forEach((el) => {\n\t\t\tel.textContent = result_count;\n\t\t})\n\t\t\n\t\t//. set progressbar\n\t\t\n\t\telements = document.querySelectorAll(`.progressbar[data-progress_id=\"${element_id}\"]`)\n\t\t\n\t\telements.forEach((el) => {\n\t\t\t\n\t\t\tif (el.tagName === \"PROGRESS\") {\n\t\t\t\tif (isTotal) {\n\t\t\t\t\tel.setAttribute('max', result_count);\n\t\t\t\t} else {\n\t\t\t\t\tel.setAttribute('value', result_count);\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tif (isTotal) {\n\t\t\t\t\tel.setAttribute('data-total', result_count);\n\t\t\t\t} else {\n\t\t\t\t\tel.setAttribute('data-value', result_count);\n\t\t\t\t}\n\t\t\t\t_this.renderBar(el)\n\t\t\t}\n\t\t})\n\t},\n\t\n\trenderBar: function(el) {\n\t\tconst total = Number(el.getAttribute('data-total'));\n\t\tconst value = Number(el.getAttribute('data-value'));\n\t\t\n\t\tif (!total || !value || total === 0) {\n\t\t\treturn;\n\t\t}\n\t\t\n\t\tconst percent = (value / total) * 100;\n\t\tel.innerHTML = `<div style=\"width: ${percent}%\"></div>`;\n\t},\n\t\n\tfetchProgess: function(el) {\n\t\tlet select_obj = null\n\t\tlet _id = el.getAttribute('data-progress_id')\n\t\t\n\t\tthis.mainObjects.forEach((item) => {\n\t\t\tif (item.id == _id) {\n\t\t\t\tselect_obj = item;\n\t\t\t}\n\t\t})\n\t\tif (!select_obj) return;\n\t\t\n\t\tlet filter = select_obj.filter;\n\t\tconsole.log(filter)\n\t\tlet totalFilter = CoCreate.filter.makeFetchOptions(filter);\n\t\tlet valueFilter = CoCreate.filter.makeFetchOptions(filter)\n\n\t\tlet progressName = el.getAttribute('data-progress_name')\n\t\tlet progressValue = el.getAttribute('data-progress_value')\n\t\t\n\t\tlet valueOperator = el.getAttribute('data-progress_operator') || \"contain\"\n\t\t\n\t\ttotalFilter['metadata'] = 'progress-total';\n\t\tvalueFilter['metadata'] = 'progress-value'\n\t\t\n\t\tlet val_filter = [].concat(valueFilter['operator']['filters']);\n\t\tval_filter.push({name: progressName, value: [progressValue], operator: valueOperator});\n\t\tvalueFilter['operator']['filters'] = val_filter;\n\n\t\tCoCreate.crud.readDocumentList(totalFilter)\n\t\tCoCreate.crud.readDocumentList(valueFilter)\n\t}\n}\n\nCoCreateProgress.init();\n\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (CoCreateProgress);\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9Db0NyZWF0ZS5hdHRyaWJ1dGVzLy4uLy4uL0NvQ3JlYXRlSlMvbm9kZV9tb2R1bGVzL0Bjb2NyZWF0ZS9wcm9ncmVzcy9zcmMvaW5kZXguanM/NGE2YiJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiOzs7O0FBQUE7O0FBRUE7O0FBRUE7O0FBRUE7QUFDQTtBQUNBO0FBQ0EsRUFBRTs7QUFFRjtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBOztBQUVBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBLEdBQUc7QUFDSCxFQUFFOztBQUVGO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0EsSUFBSTtBQUNKO0FBQ0E7QUFDQSxHQUFHO0FBQ0gsRUFBRTs7QUFFRjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBLG1CO0FBQ0E7QUFDQTtBQUNBLDhDQUE4QyxXQUFXOztBQUV6RDs7QUFFQTtBQUNBO0FBQ0EsR0FBRzs7QUFFSDs7QUFFQSx5RUFBeUUsV0FBVzs7QUFFcEY7O0FBRUE7QUFDQTtBQUNBO0FBQ0EsS0FBSztBQUNMO0FBQ0E7QUFDQSxJQUFJO0FBQ0o7QUFDQTtBQUNBLEtBQUs7QUFDTDtBQUNBO0FBQ0E7QUFDQTtBQUNBLEdBQUc7QUFDSCxFQUFFOztBQUVGO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQSx1Q0FBdUMsUUFBUTtBQUMvQyxFQUFFOztBQUVGO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLEdBQUc7QUFDSDs7QUFFQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBOztBQUVBOztBQUVBO0FBQ0E7O0FBRUE7QUFDQSxtQkFBbUIsb0VBQW9FO0FBQ3ZGOztBQUVBO0FBQ0E7QUFDQTtBQUNBOztBQUVBOztBQUVBLGlFQUFlLGdCQUFnQixFQUFDIiwiZmlsZSI6Ii4uLy4uL0NvQ3JlYXRlSlMvbm9kZV9tb2R1bGVzL0Bjb2NyZWF0ZS9wcm9ncmVzcy9zcmMvaW5kZXguanMuanMiLCJzb3VyY2VzQ29udGVudCI6WyJ2YXIgQ29DcmVhdGVQcm9ncmVzcyA9IHtcblx0XG5cdHNlbGVjdG9yOiBcIi5wcm9ncmVzcy13cmFwcGVyXCIsXG5cdFxuXHRtYWluT2JqZWN0czogW10sXG5cdFxuXHRpbml0OiBmdW5jdGlvbigpIHtcblx0XHR0aGlzLmluaXRFbGVtZW50KClcblx0XHR0aGlzLmluaXRFdmVudCgpXG5cdH0sXG5cdFxuXHRpbml0RWxlbWVudDogZnVuY3Rpb24oY29udGFpbmVyKSB7XG5cdFx0Y29uc3QgbWFpbl9jb250YWluZXIgPSBjb250YWluZXIgPyBjb250YWluZXIgOiBkb2N1bWVudDtcblx0XHRcblx0XHRsZXQgZWxlbWVudHMgPSBtYWluX2NvbnRhaW5lci5xdWVyeVNlbGVjdG9yQWxsKHRoaXMuc2VsZWN0b3IpO1xuXHRcdGxldCBfdGhpcyA9IHRoaXM7XG5cdFx0ZWxlbWVudHMuZm9yRWFjaCgoZWwpID0+IHtcblx0XHRcdGxldCBmaWx0ZXIgPSBDb0NyZWF0ZS5maWx0ZXIuc2V0RmlsdGVyKGVsLCAnZGF0YS1wcm9ncmVzc19pZCcsICdwcm9ncmVzcycpXG5cdFx0XHRcblx0XHRcdGlmICghZmlsdGVyKSByZXR1cm47XG5cdFx0XHRcblx0XHRcdGxldCBvYmogPSB7XG5cdFx0XHRcdGVsOiBlbCxcblx0XHRcdFx0ZmlsdGVyOiBmaWx0ZXIsXG5cdFx0XHRcdGlkOiBlbC5nZXRBdHRyaWJ1dGUoJ2RhdGEtcHJvZ3Jlc3NfaWQnKVxuXHRcdFx0fVxuXHRcdFx0X3RoaXMubWFpbk9iamVjdHMucHVzaChvYmopO1xuXHRcdFx0X3RoaXMuZmV0Y2hQcm9nZXNzKGVsKVxuXG5cdFx0fSlcblx0fSxcblx0XG5cdGluaXRFdmVudDogZnVuY3Rpb24oKSB7XG5cdFx0bGV0IF90aGlzID0gdGhpcztcblx0XHRDb0NyZWF0ZS5zb2NrZXQubGlzdGVuKCdyZWFkRG9jdW1lbnRMaXN0JywgZnVuY3Rpb24oZGF0YSkge1xuXG5cdFx0XHRpZiAoZGF0YS5tZXRhZGF0YSA9PSBcInByb2dyZXNzLXRvdGFsXCIpIHtcblx0XHRcdFx0X3RoaXMucmVuZGVyUHJvZ3Jlc3MoZGF0YSwgdHJ1ZSk7XG5cdFx0XHR9IGVsc2UgaWYgKGRhdGEubWV0YWRhdGEgPT0gXCJwcm9ncmVzcy12YWx1ZVwiKSB7XG5cdFx0XHRcdF90aGlzLnJlbmRlclByb2dyZXNzKGRhdGEsIGZhbHNlKVxuXHRcdFx0fVxuXHRcdH0pXG5cdH0sXG5cdFxuXHRyZW5kZXJQcm9ncmVzcyhkYXRhLCBpc1RvdGFsKSB7XG5cdFx0Ly8uXG5cdFx0aWYgKCFkYXRhKSByZXR1cm47XG5cdFx0Y29uc3QgZWxlbWVudF9pZCA9IGRhdGEuZWxlbWVudDtcblx0XHRpZiAoIWVsZW1lbnRfaWQpIHtcblx0XHRcdHJldHVybjtcblx0XHR9XG5cblx0XHRjb25zdCByZXN1bHRfY291bnQgPSBkYXRhWydkYXRhJ10ubGVuZ3RoXG5cdFx0bGV0IF90aGlzID0gdGhpcztcdFx0XG5cdFx0bGV0IGVsZW1lbnRzID0gW107XG5cdFx0bGV0IHNlbGVjdG9yICA9IGlzVG90YWwgPyAnLnByb2dyZXNzVG90YWwnIDogJy5wcm9ncmVzc1ZhbHVlJztcblx0XHRzZWxlY3RvciA9IHNlbGVjdG9yICsgYFtkYXRhLXByb2dyZXNzX2lkPVwiJHtlbGVtZW50X2lkfVwiXWA7XG5cdFx0XG5cdFx0ZWxlbWVudHMgPSBkb2N1bWVudC5xdWVyeVNlbGVjdG9yQWxsKHNlbGVjdG9yKVxuXG5cdFx0ZWxlbWVudHMuZm9yRWFjaCgoZWwpID0+IHtcblx0XHRcdGVsLnRleHRDb250ZW50ID0gcmVzdWx0X2NvdW50O1xuXHRcdH0pXG5cdFx0XG5cdFx0Ly8uIHNldCBwcm9ncmVzc2JhclxuXHRcdFxuXHRcdGVsZW1lbnRzID0gZG9jdW1lbnQucXVlcnlTZWxlY3RvckFsbChgLnByb2dyZXNzYmFyW2RhdGEtcHJvZ3Jlc3NfaWQ9XCIke2VsZW1lbnRfaWR9XCJdYClcblx0XHRcblx0XHRlbGVtZW50cy5mb3JFYWNoKChlbCkgPT4ge1xuXHRcdFx0XG5cdFx0XHRpZiAoZWwudGFnTmFtZSA9PT0gXCJQUk9HUkVTU1wiKSB7XG5cdFx0XHRcdGlmIChpc1RvdGFsKSB7XG5cdFx0XHRcdFx0ZWwuc2V0QXR0cmlidXRlKCdtYXgnLCByZXN1bHRfY291bnQpO1xuXHRcdFx0XHR9IGVsc2Uge1xuXHRcdFx0XHRcdGVsLnNldEF0dHJpYnV0ZSgndmFsdWUnLCByZXN1bHRfY291bnQpO1xuXHRcdFx0XHR9XG5cdFx0XHR9IGVsc2Uge1xuXHRcdFx0XHRpZiAoaXNUb3RhbCkge1xuXHRcdFx0XHRcdGVsLnNldEF0dHJpYnV0ZSgnZGF0YS10b3RhbCcsIHJlc3VsdF9jb3VudCk7XG5cdFx0XHRcdH0gZWxzZSB7XG5cdFx0XHRcdFx0ZWwuc2V0QXR0cmlidXRlKCdkYXRhLXZhbHVlJywgcmVzdWx0X2NvdW50KTtcblx0XHRcdFx0fVxuXHRcdFx0XHRfdGhpcy5yZW5kZXJCYXIoZWwpXG5cdFx0XHR9XG5cdFx0fSlcblx0fSxcblx0XG5cdHJlbmRlckJhcjogZnVuY3Rpb24oZWwpIHtcblx0XHRjb25zdCB0b3RhbCA9IE51bWJlcihlbC5nZXRBdHRyaWJ1dGUoJ2RhdGEtdG90YWwnKSk7XG5cdFx0Y29uc3QgdmFsdWUgPSBOdW1iZXIoZWwuZ2V0QXR0cmlidXRlKCdkYXRhLXZhbHVlJykpO1xuXHRcdFxuXHRcdGlmICghdG90YWwgfHwgIXZhbHVlIHx8IHRvdGFsID09PSAwKSB7XG5cdFx0XHRyZXR1cm47XG5cdFx0fVxuXHRcdFxuXHRcdGNvbnN0IHBlcmNlbnQgPSAodmFsdWUgLyB0b3RhbCkgKiAxMDA7XG5cdFx0ZWwuaW5uZXJIVE1MID0gYDxkaXYgc3R5bGU9XCJ3aWR0aDogJHtwZXJjZW50fSVcIj48L2Rpdj5gO1xuXHR9LFxuXHRcblx0ZmV0Y2hQcm9nZXNzOiBmdW5jdGlvbihlbCkge1xuXHRcdGxldCBzZWxlY3Rfb2JqID0gbnVsbFxuXHRcdGxldCBfaWQgPSBlbC5nZXRBdHRyaWJ1dGUoJ2RhdGEtcHJvZ3Jlc3NfaWQnKVxuXHRcdFxuXHRcdHRoaXMubWFpbk9iamVjdHMuZm9yRWFjaCgoaXRlbSkgPT4ge1xuXHRcdFx0aWYgKGl0ZW0uaWQgPT0gX2lkKSB7XG5cdFx0XHRcdHNlbGVjdF9vYmogPSBpdGVtO1xuXHRcdFx0fVxuXHRcdH0pXG5cdFx0aWYgKCFzZWxlY3Rfb2JqKSByZXR1cm47XG5cdFx0XG5cdFx0bGV0IGZpbHRlciA9IHNlbGVjdF9vYmouZmlsdGVyO1xuXHRcdGNvbnNvbGUubG9nKGZpbHRlcilcblx0XHRsZXQgdG90YWxGaWx0ZXIgPSBDb0NyZWF0ZS5maWx0ZXIubWFrZUZldGNoT3B0aW9ucyhmaWx0ZXIpO1xuXHRcdGxldCB2YWx1ZUZpbHRlciA9IENvQ3JlYXRlLmZpbHRlci5tYWtlRmV0Y2hPcHRpb25zKGZpbHRlcilcblxuXHRcdGxldCBwcm9ncmVzc05hbWUgPSBlbC5nZXRBdHRyaWJ1dGUoJ2RhdGEtcHJvZ3Jlc3NfbmFtZScpXG5cdFx0bGV0IHByb2dyZXNzVmFsdWUgPSBlbC5nZXRBdHRyaWJ1dGUoJ2RhdGEtcHJvZ3Jlc3NfdmFsdWUnKVxuXHRcdFxuXHRcdGxldCB2YWx1ZU9wZXJhdG9yID0gZWwuZ2V0QXR0cmlidXRlKCdkYXRhLXByb2dyZXNzX29wZXJhdG9yJykgfHwgXCJjb250YWluXCJcblx0XHRcblx0XHR0b3RhbEZpbHRlclsnbWV0YWRhdGEnXSA9ICdwcm9ncmVzcy10b3RhbCc7XG5cdFx0dmFsdWVGaWx0ZXJbJ21ldGFkYXRhJ10gPSAncHJvZ3Jlc3MtdmFsdWUnXG5cdFx0XG5cdFx0bGV0IHZhbF9maWx0ZXIgPSBbXS5jb25jYXQodmFsdWVGaWx0ZXJbJ29wZXJhdG9yJ11bJ2ZpbHRlcnMnXSk7XG5cdFx0dmFsX2ZpbHRlci5wdXNoKHtuYW1lOiBwcm9ncmVzc05hbWUsIHZhbHVlOiBbcHJvZ3Jlc3NWYWx1ZV0sIG9wZXJhdG9yOiB2YWx1ZU9wZXJhdG9yfSk7XG5cdFx0dmFsdWVGaWx0ZXJbJ29wZXJhdG9yJ11bJ2ZpbHRlcnMnXSA9IHZhbF9maWx0ZXI7XG5cblx0XHRDb0NyZWF0ZS5jcnVkLnJlYWREb2N1bWVudExpc3QodG90YWxGaWx0ZXIpXG5cdFx0Q29DcmVhdGUuY3J1ZC5yZWFkRG9jdW1lbnRMaXN0KHZhbHVlRmlsdGVyKVxuXHR9XG59XG5cbkNvQ3JlYXRlUHJvZ3Jlc3MuaW5pdCgpO1xuXG5leHBvcnQgZGVmYXVsdCBDb0NyZWF0ZVByb2dyZXNzO1xuIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///../../CoCreateJS/node_modules/@cocreate/progress/src/index.js\n")}}]);